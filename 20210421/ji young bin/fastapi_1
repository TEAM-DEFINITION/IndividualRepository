from enum import Enum

from fastapi import FastAPI, Form

app = FastAPI()

#Form : JSON 대신 양식 필드를 받아야하는 경우 Form
@app.post("/login/") #post 방식으로써 유저의 id나 password 경로매개변수 처럼 url에 드러나지 않고 body안에 들어감으로서 정보를 유출하지 않는다
async def login(username: str = Form(...), password: str = Form(...)):
    if username == password:
        return {"중복되었습니다"}
    return {"username": username}

#동시성 및 비동기/대기 
#results = await some_library()

@app.get('/')
async def read_results():
    results = await some_library()
    return results

@app.get('/')
def results():
    results = some_library()
    return resultss

#경로 매개 변수 
'''class ModelName(str, Enum):
    alexnet = "alexnet"
    resnet = "resnet"
    lenet = "lenet"

@app.get("/models/{model_name}")
async def get_model(model_name: ModelName): #클래스에 선언 되어있는 객체와 매치되어있는 문자열을 경로매개변수에 넣어 실행하게 되면 지정된 문자열이 나온다
    if model_name == ModelName.alexnet:
        return {"model_name": model_name, "message": "Deep Learning FTW!"}

    if model_name.value == "lenet":
        return {"model_name": model_name, "message": "LeCNN all the images"}

    return {"model_name": model_name, "message": "Have some residuals"}'''


'''@app.get("/items/{item_id}") #get방식으로 /items/item_id 사이트를 들어가면 item_id가 뜨는 
async def read_item(item_id : int): #유형이 있는 매개 변수 item_id가 int 형식 
    return {"item_id : item_id"}'''

'''@app.get("/users/me") #잘못된 경로 매개 변수를 넣었을때 메세지를 출력
async def read_user_me():
    return {"user_id": "the current user"}

@app.get("/users/{user_id}")#유저 id 를 다시 return 해서 보여주는 경로 매개 변수 
async def read_user(user_id: str): # string 형 
    return {"user_id": user_id}'''
